{"version":3,"sources":["components/Select.js","components/Showcase.js","components/MovieSeat.js","App.js","reportWebVitals.js","index.js"],"names":["Select","_ref","id","data","value","onChange","options","map","x","_jsx","children","name","e","target","Showcase","_jsxs","className","occupiedSeats","SeatRow","row","onClick","selectedSeats","seats","_loop","seatNumber","i","clickEvent","cssClass","isSeatOccupied","find","isOccupied","isSeatSelected","isSelected","push","concat","MovieSeat","_ref2","movies","price","setStorage","selectedMovie","localStorage","setItem","JSON","stringify","App","storageData","getItem","parse","_useState","useState","_useState2","_slicedToArray","setSelectedSeats","_useState3","_useState4","setSelectedMovie","val","found","newValue","_toConsumableArray","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93052849.chunk.js","sourcesContent":["const Select = ({ id, data, value, onChange }) => {\n    const options = data.map(x => (<option key={x.id} value={x.id}>{x.name}</option>));\n\n    return (\n        <select id={id} value={value} onChange={(e) => onChange(e.target.value)}>\n            {options}\n        </select>\n    );\n}\n\nexport default Select;","const Showcase = () => {\n    return (\n        <ul className=\"showcase\">\n            <li>\n                <div className=\"seat\"></div>\n                <small>N/A</small>\n            </li>\n            <li>\n                <div className=\"seat selected\"></div>\n                <small>Selected</small>\n            </li>\n            <li>\n                <div className=\"seat occupied\"></div>\n                <small>Occupied</small>\n            </li>\n        </ul>\n    );\n}\n\nexport default Showcase;","const occupiedSeats = [13, 16, 22, 23, 25, 26, 27, 32, 33, 44]; // total seats: 48\n\nconst isOccupied = (seatNumber) => {\n    const found = occupiedSeats.find(x => (x === seatNumber));\n    \n    return !!found;\n}\n\nconst isSelected = (selectedSeats, seatNumber) => {\n    const found = selectedSeats.find(x => (x === seatNumber));\n\n    return !!found;\n}\n\nconst SeatRow = ({ row, onClick, selectedSeats }) => {\n    const seats = [];\n\n    for (let i = (row * 8); i < (8 * (row + 1)); i+=1) {\n        const seatNumber = (i+1);\n        let clickEvent = () => {};\n        let cssClass = \"\";\n        let isSeatOccupied = isOccupied(seatNumber);\n        let isSeatSelected = isSelected(selectedSeats, seatNumber);\n\n        if (!isSeatOccupied) {\n            clickEvent = () => onClick(seatNumber)\n        }\n\n        if (isSeatOccupied) {\n            cssClass = 'occupied';\n        } else if (isSeatSelected) {\n            cssClass = 'selected';\n        }\n\n        seats.push(<div key={i} className={`seat ${cssClass}`} onClick={clickEvent} />);\n    }\n\n    return (\n        <div className=\"row\">\n            {seats}\n        </div>\n    )\n}\n\nconst MovieSeat = ({ selectedSeats, onClick }) => {\n    const seats = [];\n\n    for (let i = 0; i < 6; i+=1) {\n        seats.push(<SeatRow key={i} row={i} onClick={onClick} selectedSeats={selectedSeats}/>);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"screen\" />\n            {seats}\n        </div>\n    );\n}\n\nexport default MovieSeat;","import { useState } from 'react';\nimport './App.css';\nimport Select from \"./components/Select\";\nimport Showcase from \"./components/Showcase\";\nimport MovieSeat from \"./components/MovieSeat\";\n\nconst movies = [\n  {\n    id: '10',\n    name: 'Avengers: Endgame ($10)',\n    price: 10,\n  },\n  {\n    id: '12',\n    name: 'Joker ($12)',\n    price: 12,\n  },\n  {\n    id: '8',\n    name: 'Toy Story 4 ($8)',\n    price: 8,\n  },\n  {\n    id: '9',\n    name: 'The Lion King ($9)',\n    price: 9,\n  },\n];\n\nconst setStorage = (selectedMovie, selectedSeats) => {\n  localStorage.setItem(\"data\", JSON.stringify({ selectedMovie, selectedSeats }));\n}\n\nconst App = () => {\n  let storageData = localStorage.getItem(\"data\");\n\n  if (storageData) {\n    storageData = JSON.parse(storageData);\n  }\n\n  const [selectedSeats, setSelectedSeats] = useState(storageData ? storageData.selectedSeats : []);\n  const [selectedMovie, setSelectedMovie] = useState(storageData ? storageData.selectedMovie : '10');\n\n  const onSeatClick = (seatNumber) => {\n    const found = selectedSeats.find(x => (x === seatNumber));\n    let newValue = [...selectedSeats, seatNumber];\n\n    if (found) {\n      newValue = selectedSeats.filter(x => (x !== seatNumber));\n    }\n\n    setSelectedSeats(newValue);\n    setStorage(selectedMovie, newValue);\n  }\n\n  const onSelectMovie = (val) => {\n    setSelectedMovie(val);\n    setStorage(val, selectedSeats);\n  }\n\n  const calculateTotalPrice = () => {\n    const movie = movies.find(x => (x.id === selectedMovie));\n\n    return (movie.price * selectedSeats.length);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"movie-container\">\n        <label>Pick a movie:</label>\n        <Select id=\"movie\" data={movies} value={selectedMovie} onChange={onSelectMovie} />\n      </div>\n      <Showcase />\n      <MovieSeat selectedSeats={selectedSeats} onClick={onSeatClick} />\n      <p className=\"text\">You have selected <span>{selectedSeats.length}</span> seats for a price of $<span>{calculateTotalPrice()}</span></p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}